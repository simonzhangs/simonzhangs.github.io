(window.webpackJsonp=window.webpackJsonp||[]).push([[189],{701:function(t,v,s){"use strict";s.r(v);var _=s(12),l=Object(_.a)({},(function(){var t=this,v=t.$createElement,s=t._self._c||v;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("JS存在6种声明变量的方式，分别为：var、let、const、function、class、import。")]),t._v(" "),s("h2",{attrs:{id:"var"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#var"}},[t._v("#")]),t._v(" var")]),t._v(" "),s("p",[t._v("在ES5阶段，用var声明变量，var的特点：")]),t._v(" "),s("ol",[s("li",[t._v("没有块的概念，可以跨块访问，不能跨函数访问；")]),t._v(" "),s("li",[t._v("存在变量提升。")])]),t._v(" "),s("h2",{attrs:{id:"let"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#let"}},[t._v("#")]),t._v(" let")]),t._v(" "),s("p",[t._v("在ES6阶段，出现了块级作用域，同时新增let命令，let声明的变量有以下特点：")]),t._v(" "),s("ol",[s("li",[t._v("声明的变量为块级作用域，只在它所在的代码块有效；")]),t._v(" "),s("li",[t._v("不存在变量提升，变量需要先声明后再使用，否则会报错；")]),t._v(" "),s("li",[t._v("暂时性死区。在代码块内，使用let声明变量之前，该变量都不可用；")]),t._v(" "),s("li",[t._v("不允许重复声明。")])]),t._v(" "),s("h2",{attrs:{id:"const"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#const"}},[t._v("#")]),t._v(" const")]),t._v(" "),s("p",[t._v("const用于声明一个只读的常量，特点：")]),t._v(" "),s("ol",[s("li",[t._v("一旦声明就必须同时初始化；")]),t._v(" "),s("li",[t._v("一旦声明，常量值就不能改变了（指的是内存地址不能改变）；")]),t._v(" "),s("li",[t._v("块级作用域；")]),t._v(" "),s("li",[t._v("不存在变量提升；")]),t._v(" "),s("li",[t._v("存在暂时性死区。")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),s("p",[t._v("const保证的并不是变量的值不能改变，而是变量指向的内存地址不能改变。对于简单类型的数据，值就保存在变量指向的内存地址中，因此相当于常量。对于复合类型的数据，常量指向的内存地址保存的是一个指针，")])])])}),[],!1,null,null,null);v.default=l.exports}}]);