(window.webpackJsonp=window.webpackJsonp||[]).push([[295],{809:function(t,s,a){"use strict";a.r(s);var n=a(12),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("在使用 Vue 框架之前，我们需要用 JS 或者 jQuery 直接操作 DOM 从而进行视图的更新，要知道如何有多个数据发生变化的话，要直接操作 DOM 进行视图的更新会占用很多开销。而在 Vue 框架中，我们知道通过 data()中数据的改变进行视图的更新。其中具体的过程其实是：数据发生改变 --\x3e 虚拟 DOM 计算变更 --\x3e 操作真实 DOM --\x3e 视图更新。")]),t._v(" "),a("h1",{attrs:{id:"虚拟-dom"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#虚拟-dom"}},[t._v("#")]),t._v(" 虚拟 DOM")]),t._v(" "),a("p",[t._v("虚拟 DOM 指的是用 JS 对象来模拟 DOM 结构，这个对象由三个重要属性：tag、props 和 children，分别对应 DOM 的标签、属性、子元素。我们以下面的 DOM 结构来书写一个虚拟 DOM，也就是 JS 对象：")]),t._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("container"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("h1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("虚拟DOM"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("h1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("ul")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token special-attr"}},[a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("style")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),a("span",{pre:!0,attrs:{class:"token value css language-css"}},[a("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("orange")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("第一项"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("第二项"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("第三项"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("ul")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("p",[t._v("对应的虚拟 DOM 对象为：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("tag")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'div'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("props")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'app'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("className")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'container'")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("children")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("tag")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'h1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("children")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'虚拟DOM'")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("tag")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ul'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("props")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("style")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'color:orange'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("children")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("tag")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'li'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("children")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'第一项'")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("tag")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'li'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("children")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'第二项'")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("tag")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'li'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("children")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'第三项'")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br")])]),a("h1",{attrs:{id:"虚拟-dom-的好处"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#虚拟-dom-的好处"}},[t._v("#")]),t._v(" 虚拟 DOM 的好处")]),t._v(" "),a("p",[t._v("那为什么要用虚拟 DOM 呢，显而易见虚拟 DOM 实际上是 JS 对象，相比于直接操作 DOM 来更新视图，直接使用 JS 引擎操作 JS 对象会更快。此外，操作虚拟 DOM 更新视图，它不会将整个 DOM 节点重新渲染，只会渲染改变的 DOM 节点。")]),t._v(" "),a("p",[t._v("我们通过一个例子就可以得出很直观地看出虚拟 DOM 的优点：")]),t._v(" "),a("h1",{attrs:{id:"diff-算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#diff-算法"}},[t._v("#")]),t._v(" diff 算法")]),t._v(" "),a("p",[t._v("diff 算法是虚拟 DOM 的核心。 我们用虚拟 DOM 来表示真实 DOM，当数据发生改变时，会产生一个新的虚拟 DOM，通过对比新旧虚拟 DOM 的最小变化，从而更新视图。diff 算法则是用来查找新旧虚拟 DOM 的差异，它的步骤是：")]),t._v(" "),a("ol",[a("li",[t._v("遍历老虚拟 DOM")]),t._v(" "),a("li",[t._v("遍历新虚拟 DOM")]),t._v(" "),a("li",[t._v("重新排序")])]),t._v(" "),a("p",[t._v("如果直接这样遍历比较的话，复杂度是 O(n^3),根据 DOM 树结构特点，对 diff 算法改进：")]),t._v(" "),a("ol",[a("li",[t._v("只比较同一层级，不跨级比较，复杂度则变为 O(n)；")]),t._v(" "),a("li",[t._v("标签名不同，直接删除，不继续深度比较；")]),t._v(" "),a("li",[t._v("标签名相同，key 相同，就认为是相同节点，不继续深度比较；（v-for 绑定的:key）")])]),t._v(" "),a("h1",{attrs:{id:"虚拟-dom-和-diff-流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#虚拟-dom-和-diff-流程"}},[t._v("#")]),t._v(" 虚拟 DOM 和 diff 流程")]),t._v(" "),a("h2",{attrs:{id:"生成-vnode"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#生成-vnode"}},[t._v("#")]),t._v(" 生成 VNode")]),t._v(" "),a("p",[t._v("vnode函数传入sel,data,children,text,undefined, 返回节点对象{sel, data, children, text, elm, key }")]),t._v(" "),a("blockquote",[a("p",[t._v("注意：\nchildren 和 text 只能存在一个；")]),t._v(" "),a("p",[t._v("elm 是虚拟节点sel 对应的真实的DOM节点， 在使用patch函数时使用，代表要渲染到哪一个真实DOM元素上；")]),t._v(" "),a("p",[t._v("key 是v-for 绑定的key， 其实在Vue每个组件都是可以接收key的，只不过v-for是必须提供key值。（为什么需要提供呢，在后面的函数中有提到）")])]),t._v(" "),a("h2",{attrs:{id:"patch-函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#patch-函数"}},[t._v("#")]),t._v(" patch 函数")]),t._v(" "),a("p",[t._v("在首次页面渲染的时候执行一次patch函数，将VNode渲染到空的容器中:"),a("code",[t._v("patch(container, vnode)")]),t._v(";这里container是真实DOM的节点。")]),t._v(" "),a("p",[t._v("之后页面更新时将新的VNode替换旧的VNode："),a("code",[t._v("patch(vnode, newVnode)")])]),t._v(" "),a("p",[t._v("patch函数解析：")]),t._v(" "),a("p",[t._v("首先判断第一个参数是否为Vnode类型，如果不是则创建一个空的vnode，并关联到对应的DOM元素；")]),t._v(" "),a("p",[t._v("再通过sameVnode判断新旧vnode是否相同，比较的两个vnode的key和sel是否相等，如果相同的话就直接使用patchVnode更新；")]),t._v(" "),a("p",[t._v("如果不相同的话，说明两个vnode的key或tag不相同，是不同的Vnode,则使用createElm来创建一个真实的DOM元素，并插入新的DOM删除旧的DOM。")]),t._v(" "),a("h2",{attrs:{id:"patchvnode-函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#patchvnode-函数"}},[t._v("#")]),t._v(" patchVnode 函数")]),t._v(" "),a("p",[t._v("在新旧Vnode相同时候，就用patchNode进行更新。")]),t._v(" "),a("p",[t._v("首先将旧的vnode关联的DOM元素传递给新的vnode；")]),t._v(" "),a("p",[t._v("再判断新旧vnode的children是否相等，如果相等就直接返回；如果不相等的话，分为以下几种情况：")]),t._v(" "),a("ol",[a("li",[t._v("新的vnode 有text属性，无children属性，且新旧vnode的text属性不相同时")])]),t._v(" "),a("p",[t._v("如果旧的vnode 有children属性，则移除旧的vnode的children属性移除；并且设置新的vnode的text")]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("新的vnode 无text")])]),t._v(" "),a("p",[t._v("①新旧vnode的children都有定义，则利用"),a("code",[t._v("updateChildren")]),t._v("对children进行更新；")]),t._v(" "),a("p",[t._v("②新的vnode有children，而旧的没有children，则清空旧节点的text，并新的children添加；")]),t._v(" "),a("p",[t._v("③新的vnode 无children，旧的有children，则移除旧的vnode；")]),t._v(" "),a("p",[t._v("④旧的vnode有text，则清空text。")]),t._v(" "),a("h2",{attrs:{id:"updatechildren-函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#updatechildren-函数"}},[t._v("#")]),t._v(" updateChildren 函数")]),t._v(" "),a("p",[t._v("这个是diff最小量更新的核心，通过四个指针来比较，分别是老的children的oldStartIdx、oldEndIdx，新children的newStartIdx、newEndIdx。")]),t._v(" "),a("p",[t._v("一共有四个对比情况，看是否vnode相同：")]),t._v(" "),a("ol",[a("li",[t._v("老的开始和新的开始对比")])]),t._v(" "),a("p",[t._v("如果两者vnode相同，则进行patchVnode操作，又回去了进行节点下面的比较，相当于递归；然后对于指针进行移动。")]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[a("p",[t._v("老的结束和新的结束对比")])]),t._v(" "),a("li",[a("p",[t._v("老的开始和新的结束对比")])]),t._v(" "),a("li",[a("p",[t._v("老的结束和新的结束对比")])])]),t._v(" "),a("p",[t._v("如果上面四种情况都没有命中，则拿新的开始的key，在老的children里面去找有没有某个节点有对应的key：")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("如果在老的children中找到了：再判断sel是否相等，如果不相等，则创建新的元素，否则进行patchVnode对节点进行更新；")])]),t._v(" "),a("li",[a("p",[t._v("如果没有找到，则创建新的元素。")])])]),t._v(" "),a("blockquote",[a("p",[t._v("参考链接："),a("a",{attrs:{href:"https://juejin.cn/post/6994959998283907102"}},[t._v("15张图，20分钟吃透Diff算法核心原理，我说的！！！")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);